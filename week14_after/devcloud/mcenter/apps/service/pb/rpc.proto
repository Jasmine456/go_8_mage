syntax = "proto3";

package go8.devcloud.mcenter.service;
option go_package = "github.com/Jasmine456/go_8_mage/week14_after/devcloud/mcenter/apps/service";

import "apps/service/pb/service.proto";

// RPC 服务
service RPC {
    rpc ValidateCredential(ValidateCredentialRequest) returns(Service);
    rpc DescribeService(DescribeServiceRequest) returns(Service);
}

// ValidateCredentialRequest 校验服务凭证
message ValidateCredentialRequest {
    // 服务客户端ID
    // @gotags: json:"client_id" yaml:"client_id" validate:"required,lte=100"
    string client_id = 1;
    // 服务客户端凭证
    // @gotags: json:"client_secret" yaml:"client_secret" validate:"required,lte=100"
    string client_secret = 2;
}

enum DescribeBy {
    // 通过service id查询应用详情
    SERVICE_ID = 0;
    // 通过service name查询应用详情
    SERVICE_NAME = 1;
    // 通过service client_id查询应用详情
    SERVICE_CLIENT_ID =2;
}

// DescribeMicroRequest 查询应用详情
message DescribeServiceRequest {
    // 查询详情的方式
    // @gotags: json:"describe_by" yaml:"describe_by"
    DescribeBy describe_by = 1;
    // 服务客户端Id
    // @gotags: json:"client_id" yaml:"client_id"
    string client_id = 2;
    // 服务名称
    // @gotags: json:"name" yaml:"name"
    string name = 3;
    // 服务Id
    // @gotags: json:"id" yaml:"id"
    string id = 4;
}