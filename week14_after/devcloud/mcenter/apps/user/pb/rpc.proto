syntax = "proto3";

package go8.devcloud.mcenter;

option go_package = "github.com/go_8_mage/week14_after/devcloud/mcenter/apps/user";

import "apps/user/pb/user.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";
import "github.com/infraboard/mcube/pb/request/request.proto";
//import "mcenter/apps/user/pb/user.proto";
//import "mcenter/common/pb/github.com/infraboard/mcube/pb/page/page.proto";
//import "mcenter/common/pb/github.com/infraboard/mcube/pb/request/request.proto";

// 对外暴露的RPC接口
service RPC {
    //   查询用户详情
    rpc DescribeUser(DescribeUserRequest) returns (mcenter.User);
    //   查询用户列表
    rpc QueryUser(QueryUserRequest) returns (UserSet);
}


// DescribeUserRequest 查询用户详情
message DescribeUserRequest {
    // 查询方式
    // @gotags: json:"describe_by"
    DESCRIBE_BY describe_by = 1;
    // 用户账号id
    // @gotags: json:"id"
    string id = 2;
    // 用户账号
    // @gotags: json:"username"
    string username = 3;
}

enum DESCRIBE_BY {
    // 通过UserId查询用户
    USER_ID = 0;
    // 通过Username查询用户
    USER_NAME = 1;
}


// QueryUserRequest 获取子账号列表
message QueryUserRequest {
    // 分页参数
    // @gotags: json:"page"
    infraboard.mcube.page.PageRequest page = 1;
    // 用户所属Domain
    // @gotags: json:"domain" validate:"required"
    string domain = 2;
    // 账号提供方
    // @gotags: json:"provider"
    optional PROVIDER provider = 3;
    // 用户类型
    // @gotags: json:"type"
    optional TYPE type = 4;
    // 通过Id
    // @gotags: json:"user_ids"
    repeated string user_ids = 5;
    // 是否获取数据
    // @gotags: json:"skip_items"
    bool skip_items = 8;
    // 关键字查询
    // @gotags: json:"keywords"
    string keywords = 9;
}

// UpdatePasswordRequest 密码更新(需要知道原密码) 用户自己使用
message UpdatePasswordRequest {
    // 用户Id
    // @gotags: json:"user_id"
    string user_id = 1;
    // 旧密码
    // @gotags: json:"old_pass"
    string old_pass = 2;
    // 新密码
    // @gotags: json:"new_pass"
    string new_pass = 3;
    // 是否重置
    // @gotags: json:"is_reset"
    bool is_reset = 4;
    // 重置原因
    // @gotags: json:"reset_reason"
    string reset_reason = 5;
}

// 重置密码, 用户忘了自己的密码, 管理员使用
message ResetPasswordRequest {
    // 用户名
    // @gotags: json:"user_id"
    string user_id = 1;
    // 新密码
    // @gotags: json:"new_pass"
    string new_pass = 3;
    // 是否重置
    // @gotags: json:"is_reset"
    bool is_reset = 4;
    // 重置原因
    // @gotags: json:"reset_reason"
    string reset_reason = 5;
}


message DeleteUserRequest {
    // 用户账号id
    // @gotags: json:"user_ids" validate:"required,lte=60"
    repeated string user_ids = 2;
}

// UpdateUserRequest todo
message UpdateUserRequest {
    // 更新模式
    // @gotags: json:"update_mode"
    infraboard.mcube.request.UpdateMode update_mode = 1;
    // 用户Id
    // @gotags: json:"user_id" validate:"required,lte=120"
    string user_id = 2;
    // profile 账号profile
    // @gotags: json:"profile"
    Profile profile = 3;
}
