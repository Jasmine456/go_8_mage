syntax = "proto3";

package go8.devcloud.mcenter.token;
option go_package = "github.com/Jasmine456/go_8_mage/week14_after/devcloud/mcenter/apps/token";

import "apps/token/pb/token.proto";
import "apps/user/pb/user.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";

// Token服务
service RPC {
    // 校验Token， Grante Type Password, username:password
    rpc ValidateToken(ValidateTokenRequest) returns (token.Token) {};
}

message ValidateTokenRequest {
    // 令牌
    // @gotags: json:"access_token"
    string access_token = 1;
}

message IssueTokenRequest {
    // 测试颁发, 不会持久化
    // @gotags: json:"dry_run"
    bool dry_run = 15;
    // 授权类型
    // @gotags: json:"grant_type"
    GRANT_TYPE grant_type = 1;
    // 令牌类型
    // @gotags: json:"type"
    TOKEN_TYPE type = 2;
    // 令牌过期时间
    // @gotags: json:"expired_at"
    int64 expired_at = 3;
    // 令牌访问空间
    // @gotags: json:"namespace"
    string namespace = 4;
    // 空间内的过滤条件, 格式key=value
    // @gotags: json:"scope,omitempty"
    string scope = 5;
    // PASSWORD授权时, 用户名
    // @gotags: json:"username,omitempty"
    string username = 6;
    // PASSWORD授权时, 用户密码
    // @gotags: json:"password,omitempty"
    string password = 7;
    // REFRESH授权时, 刷新令牌
    // @gotags: json:"refresh_token,omitempty"
    string refresh_token = 8;
    // PRIVATE_TOKEN授权时, 访问令牌
    // @gotags: json:"access_token,omitempty"
    string access_token = 9;
    // PRIVATE_TOKEN授权时, 描述信息
    // @gotags: json:"description"
    string description = 10;
    // AUTH_CODE授权时, Code
    // @gotags: json:"auth_code"
    string auth_code = 11;
    // AUTH_CODE授权时, State
    // @gotags: json:"state"
    string state = 12;
    // 二次认证时验证码
    // @gotags: json:"verify_code"
    string verify_code = 13;
    // 令牌办法给客户端信息
    // @gotags: json:"location,omitempty"
    Location location = 14;
}

message RevolkTokenRequest {
    // 令牌
    // @gotags: json:"access_token"
    string access_token = 1;
    // 刷新令牌
    // @gotags: json:"refresh_token"
    string refresh_token = 5;
}

message ChangeNamespaceRequest {
    // 需要切换空间令牌
    // @gotags: json:"token" validate:"required"
    string token = 1;
    // 空间名称
    // @gotags: json:"namespace" validate:"required"
    string namespace = 2;
}

// token查询
message QueryTokenRequest {
    // 分页参数
    // @gotags: json:"page"
    infraboard.mcube.page.PageRequest page = 1;
    // 颁发平台, 根据授权方式判断
    // @gotags: bson:"platform" json:"platform"
    optional PLATFORM platform = 2;
    // 访问令牌
    // @gotags: json:"access_token"
    string access_token = 3;
    // 刷新令牌, 当访问令牌过期时, 可以刷新令牌进行刷新
    // @gotags: json:"refresh_token"
    string refresh_token = 4;
    // 用户类型
    // @gotags: json:"user_type"
    optional TYPE user_type = 5;
    // 用户当前所处域
    // @gotags: json:"domain"
    string domain = 6;
    // 用户名
    // @gotags: json:"username"
    string username = 7;
    // 用户Id
    // @gotags: json:"user_id"
    string user_id = 8;
    // 授权类型
    // @gotags: json:"grant_type"
    optional GRANT_TYPE grant_type = 9;
    // 令牌类型
    // @gotags: json:"type"
    optional TOKEN_TYPE type = 10;
    // 当前空间
    // @gotags: json:"namespace"
    string namespace = 11;
    // 令牌描述信息, 当授权类型为Private Token时, 做描述使用
    // @gotags: json:"description"
    string description = 12;
    // 是否冻结
    // @gotags: json:"is_block"
    optional bool is_block = 13;
    // 冻结类型
    // @gotags: json:"block_type"
    optional BLOCK_TYPE block_type = 14;
}